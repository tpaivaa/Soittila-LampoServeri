#!/usr/bin/env python
# -*- coding: iso-8859-15 -*-

import os
import time
import syslog
import pymongo 
from pymongo import Connection
import soittilaFiles as f
import datetime
from datetime import datetime
from time import strftime

def getAika():
    now = datetime.now()
    aika = now.strftime("%Y.%m.%d-%H:%M:%S")
    return aika

def getTemp(anturi):
    f = open(anturi)
    s = f.readline()
    d = round(float(s.strip()), 0)
    i = int(d)
    return i    

def getTimeStamp():
    t = datetime.now()
    t = time.mktime(t.timetuple())
    return t

def dateToStamp(date):
    stamppy = int(time.mktime(time.strptime(date, '%Y.%m.%d-%H:%M:%S')))
#    stamppy = int(time.mktime(time.strptime(date, '%H:%M:%S-%d.%m.%Y')))
    return stamppy
# dateToStamp('19:02:00-23.01.2012')

def timestampToDate(aikaleima):
    date = datetime.fromtimestamp(aikaleima)
    date = date.strftime('%Y.%m.%d-%H:%M:%S')
    return date

try:
    while(1):
        syslog.syslog('Lampötilojen Processing started')
        connection = Connection('10.10.10.55', 27017)
        db = connection.soittila_lampotilat
        uudet_lampotilat = [{"anturi": "puukattila","lampotila": getTemp(f.puukattila),"date": getAika(), "stamp": getTimeStamp()},
            {"anturi": "varaajaUp","lampotila": getTemp(f.varaajaUp),"date": getAika(),"stamp": getTimeStamp()},
            {"anturi": "varaajaDown","lampotila": getTemp(f.varaajaDown),"date": getAika(),"stamp": getTimeStamp()},
            {"anturi": "kattilaCold","lampotila": getTemp(f.kattilaCold),"date": getAika(),"stamp": getTimeStamp()},
            {"anturi": "kattilaHot","lampotila": getTemp(f.kattilaHot),"date": getAika(),"stamp": getTimeStamp()},
            {"anturi": "patteriL","lampotila": getTemp(f.patteriL),"date": getAika(),"stamp": getTimeStamp()},
            {"anturi": "LLlahto","lampotila": getTemp(f.LLlahto),"date": getAika(),"stamp": getTimeStamp()},
            {"anturi": "kattilaSw","tila": getTemp(f.kattilaSw),"date": getAika(),"stamp": getTimeStamp()},
            {"anturi": "laskuriA","lukema": getTemp(f.laskuriA),"date": getAika(),"stamp": getTimeStamp()},
            {"anturi": "laskuriB","lukema": getTemp(f.laskuriB),"date": getAika(),"stamp": getTimeStamp()},
            {"anturi": "maalampo","lampotila": getTemp(f.maalampo),"date": getAika(),"stamp": getTimeStamp()},
            {"anturi": "ulkoP","lampotila": getTemp(f.ulkoP),"date": getAika(),"stamp": getTimeStamp()},
            {"anturi": "ulkoE","lampotila": getTemp(f.ulkoE),"date": getAika(),"stamp": getTimeStamp()},
            {"anturi": "akWcLattia","lampotila": getTemp(f.akWcLattia),"date": getAika(),"stamp": getTimeStamp()},
            {"anturi": "khh","lampotila": getTemp(f.khh),"date": getAika(),"stamp": getTimeStamp()},
            {"anturi": "olohuone","lampotila": getTemp(f.olohuone),"date": getAika(),"stamp": getTimeStamp()}, 
            {"anturi": "makuuhuone","lampotila": getTemp(f.makuuhuone),"date": getAika(),"stamp": getTimeStamp()}, 
            {"anturi": "ulkosauna","lampotila": getTemp(f.ulkosauna),"date": getAika(),"stamp": getTimeStamp()}, 
            {"anturi": "sauna","lampotila": getTemp(f.sauna),"date": getAika(),"stamp": getTimeStamp()}]
        lampotilat = db.soittila_lampotilat
        lampotilat.insert(uudet_lampotilat)
        syslog.syslog('Lämpötilat päivitetty')
        disconnect()
        time.sleep(600)

except Exception, e:
    syslog.syslog(syslog.LOG_ERR,'Lampo2Mongo ollaan errorissa')
    pass
